<div class="header-title text-center" style="margin-bottom: 0">
  <h1><%= heading %></h1>
  <% if params[:action] == "new" %>
  <div class="row">
    <div class="small-12 medium-10 large-7 xlarge-6 small-centered columns">
    <div class="page-blurb ">This is your chance to create and share your favorite Middlebury dining hall recipes! </div>
    </div>
  </div>
  <% end %>
</div>

<div class="row">
  <div class="small-12 medium-10 large-7 xlarge-6 small-centered columns recipe-form">



    <%= form_for @recipe, :html => {:multipart => true}  do |f| %>
    <% if @recipe.errors.any? %>
    <div id="errors_count">
      <h4><%= pluralize(@recipe.errors.count, "error") %> prohibited this recipe from being saved!</h4>

<!--       <ul>
        <%# @recipe.errors.each do |attribute, msg| %>

        <li><%#= attribute.to_s.capitalize + "-" + msg %></li>
        <%# end %>
      </ul> -->
    </div>
    <% end %>

    <div class="field title">
      <%= f.label :title do %>
      <h4>Title</h4>
      <% end -%>
      <%= f.text_field :title, maxlength: Recipe::TITLE_LENGTH, placeholder: "Give it a unique and creative title!" %>
      <% if !@recipe.errors[:title].blank? %>
        <div class="error-explanation"><%= @recipe.errors[:title].first.to_s %></div>
      <% end %>
    </div>  

    <div class="field blurb">
      <%= f.label :blurb do %>
      <h4>Blurb</h4>
      <% end -%>
      <%= f.text_field :blurb, maxlength: Recipe::BLURB_LENGTH, placeholder: "What's this recipe all about?" %>
      <% if !@recipe.errors[:blurb].blank? %>
        <div class="error-explanation"><%=  "Blurb " + @recipe.errors[:blurb].first.to_s %></div>
      <% end %>
    </div>



    <h4 class="ingredients">Ingredients</h4>
    <% if @recipe.errors[:ingredient].size > 0 %>
      <div class="error-explanation"><%= @recipe.errors[:ingredient].first.to_s %></div>
    <% end %>
    <div id="ingredients-section" class="field" >


      <div class="selector_container"><%= select_tag :ingredient_selector, "<option value="" disabled selected>Add an Ingredient</option>".html_safe+grouped_options_for_select(@grouped_item_options), data: {:placeholder =>'Add an Ingredient'}, placeholder: "Add an Ingredient" -%></div>


      <div id="list-container">
        <!-- For redirected to page with ingredients (edit) -->
        <%= f.fields_for :ingredients do |ingredient_form| %>
        <%= render 'ingredient_fields', f: ingredient_form %>
        <% end -%>
      </div>

      <div class="all-actions clrfix" style="display: none">
        <span id="remove-all"><span class="fa fa-times"></span> Remove All </span>

        <!-- <span class="up" id="slide-all">Show Quantities<span class="fa toggle-all">&#xf149</span></span> -->
      </div>

    </div>
    <div class="field directions">
      <%= f.label :directions do %>
      <h4>Directions</h4>
      <% end -%>
      <% if !@recipe.errors[:directions].blank? %>
        <div class="error-explanation"><%= :directions.to_s.capitalize + " " + @recipe.errors[:directions].first.to_s %></div>
      <% end %>
      <%= f.text_area :directions, placeholder: "Describe how to go about creating this meal." %>
    </div>
    <div class="field tags">
      <h4 class="tags">Tags</h4>
      <div><%= f.grouped_collection_select :tag_ids, TagCategory.all, :tags, :name, :id, :name, {}, {multiple: true, id: 'tag_selector', title: "Tags", :"data-placeholder" => "Select Tags"} -%></div>

      <div id="tag_field_container">
      <% seen_tags = [] %>
        <%= f.fields_for :taggings do |tag_form| %>
          <% if !seen_tags.include? tag_form.object.tag_id  %>
          <%= render 'tagging_fields', f: tag_form -%>      
          <% seen_tags << tag_form.object.tag_id %>
          <% end -%>
        <% end -%>
      </div>

    </div>
    <% @ingredient_fields_content = add_fields_helper(f, :ingredients) %>
    <% @tag_fields_content = add_fields_helper(f, :taggings) %>

    <h4>Image</h4>
    <img src="<%= @recipe.image_url if !@recipe.image.nil? %>" alt="" id="image-holder">
    <div id="upload_button" >
      <div class="fa fa-camera"></div>
      <div class="text">
        <%- if !@recipe.image? -%> 
                 Upload a Photo
        <%- else -%> 
                 Upload a Different Photo
        <%- end -%> 
        <br>
        <span class="meta">4:3 (Horizontal on Mobile Devices)</span>
      </div>
    </div>

    <%= f.file_field :image, id: :file_input %>

      <%= f.label :remove_image, "Delete Image", id: :delete_image %>
      <%= f.check_box :remove_image %>
     
    <br>
    
    <% if user_signed_in? %>
    <%= f.submit params[:action] == "new" ? "Create" : "Save", id: :create_recipe, class: "button-thick" %>
    <% else %>
      <%= link_to "Sign In Now!", new_user_session_path, class: "form-submit", data: {:"reveal-id" => "sign_in_modal"} %>
    <% end %>


    <% end %>
    <% if params[:action] == "edit" %>
      <%= link_to "Delete this Recipe", destroy_recipe_path(@recipe), method: :delete, data: {confirm: "Are you sure you want to permanently delete this recipe?"}, class: "delete-recipe" %>
    <% end %>

  </div>
</div>

<script>


  // Initialize array to hold items that have been selected
  var chosen_items = [];


  $(document).ready(function() {

    // hack for iPhone 7.0.3 multiselects bug
    // https://discussions.apple.com/thread/5548742
    if(navigator.userAgent.match(/iPhone/i)) {
        $('select[multiple]').each(function(){
            var select = $(this).on({
                "focusout": function(){
                    var values = select.val() || [];
                    setTimeout(function(){
                        select.val(values.length ? values : ['']).change();
                    }, 1000);
                }
            });
            var firstOption = '<option value="" disabled="disabled"';
            firstOption += (select.val() || []).length > 0 ? '' : ' selected="selected"';
            firstOption += '>Select ' + (select.attr('title') || 'Options') + '';
            firstOption += '</option>';
            select.prepend(firstOption);
        });
    }

    // Setup: Fix displaying ingredient text in edit/rerendered form page
    $('.ingredient-fields').show(); 
    $('.ingredient-text').each(function() {
      var val = $(this).prev("input.item_id[type=hidden]").val();
      var option_selector = '#ingredient_selector option[value='+val+']';
      var text = $(option_selector).text();
      chosen_items.push(val);
      // console.log(val+text);
      $(this).text(text);
    });

    // // Setup: Fix displaying selected tags in chosen after edit/rerendering form page
    // var initial_chosen_tag_vals = []
    // $('#tag_selector').val().each(function() {
    //   var val = $(this).val();
    //   initial_chosen_tag_vals.push(val);
    // });
    // $('#tag_selector').val(initial_chosen_tag_vals);
    // $('#tag_selector').trigger("chosen:updated");


    // Image uploading button and preview functionality
    var wrapper = $('<div/>').css({height:0,width:0,'overflow':'hidden'});
    var fileInput = $(':file').wrap(wrapper);

    // fileInput.change(function(){
    //     $this = $(this);
    //     $('#file').text("File attached");
    // })

    $('#upload_button').click(function(){
        fileInput.click();
    }).show();

    function readURL(input) {
     if (input.files && input.files[0]) {
       var reader = new FileReader();
       reader.onload = function(e) {
         $('#image-holder').attr('src', e.target.result);
       }

       reader.readAsDataURL(input.files[0]);
      }
    }

    $("#file_input").change(function() {
        readURL(this);
        console.log("file_input changed");
    });




  });

  function create_ingredient_fields (link, text, value) {
    var content = "<%= escape_javascript(@ingredient_fields_content) %>"
    add_ingredient_fields(link, "ingredients", content);
    // console.log($('#ingredient_selector').siblings('.ingredient-fields .name input').attr('name'));
    $('#list-container input.item_id').first().val(value);
    $('#list-container .ingredient-text').first().text(text);
    // $(link).find('.ingredient-fields').first().show();
  }

  function add_ingredient_fields(link, association, content) {
    var new_id = new Date().getTime();
    var regexp = new RegExp("new_" + association, "g")
    $("#list-container").prepend(content.replace(regexp, new_id));
  };

  function create_tag_fields (link, text, value) {
    var content = "<%= escape_javascript(@tag_fields_content) %>"
    add_tag_fields(link, "taggings", content);
    $('#tag_field_container input.tag_id').first().val(value);
  }

  function add_tag_fields(link, association, content) {
    var new_id = new Date().getTime();
    var regexp = new RegExp("new_" + association, "g")
    $("#tag_field_container").prepend(content.replace(regexp, new_id));
  }

  function tag_field_destroy(val){
    var input_selector = '#tag_field_container input.tag_id[value='+val+']';
    $(input_selector).prev("input.destroy_tag[type=hidden][data-attribute=destroy]").val("1");
  }


  function add_fields(link, association, content) {
    var new_id = new Date().getTime();
    var regexp = new RegExp("new_" + association, "g")
    $(link).after(content.replace(regexp, new_id));
  };


  // Remove all ingredients functionality
  $('#ingredients-section').on("click", "#remove-all", function() {
    console.log("remove all");
    $("input[type=hidden][data-attribute=destroy]").val("1");
    $('.ingredient-fields').slideUp("fast");
    chosen_items = [];
    $('.all-actions').hide('');
    return false;
  });


  // Remove single Ingredient functionality
  $('#ingredients-section').on("click", ".remove", function() {
    $(this).prev("input[type=hidden][data-attribute=destroy]").val("1");
    $(this).closest(".ingredient-fields").hide();
    var val = $(this).next("input.item_id").val()
    var index = chosen_items.indexOf(val);
    if ( index > -1) {
      chosen_items.splice(index, 1);
    }
    if (chosen_items.length > 0) {
      $('.all-actions').show('');
    } else {
      $('.all-actions').hide('');
    }
    // console.log(chosen_items);
    return false;
  });

  // Show/hide quantity dropdown section
  $('#ingredients-section').on("click", ".info", function() {
      // allPanels.slideUp();
      // if it is pointed down
      if ($(this).hasClass('hidden')) {
        $(this).next('input.quantity').show('').focus();
        $(this).removeClass('hidden');
        $(this).addClass('showing');
      }
      else if ($(this).hasClass('showing')) {
        $(this).next('input.quantity').hide('');
        $(this).removeClass('showing');
        $(this).addClass('hidden');
      };
      return false;
    });

  //Add ingredient using select_tag
  $('#ingredients-section').on("change", "#ingredient_selector", function() {
    var text = $("#ingredient_selector option:selected").text();
    var value = $("#ingredient_selector option:selected").val();
    // console.log(text + value);
    if (value != null && value != "disabled" && chosen_items.indexOf(value) == -1) {
      create_ingredient_fields(this, text, value);
      chosen_items.push(value);
    };
    if (chosen_items.length > 0) {
      $('.all-actions').show('');
    } else {
      $('.all-actions').hide('');
    }
    // console.log(chosen_items);
    });

    $("#tag_selector").on("change", function(evt, params) {
      if (params["selected"] && !(0 == params["selected"].length)) {
        var val = params["selected"];
        create_tag_fields(this, "text", val);
        // console.log($('#tag_selector').val());
      };
      if (params["deselected"]) {
        // console.log(params["deselected"]);
        var val = params["deselected"];
        // console.log($('#tag_selector').val());
        tag_field_destroy(val);
      };
    });

    // Field with errors style changing
    $(document).on('focus', '.field_with_errors input, .field_with_errors textarea', function(event) {
      // $(this).closest('.field_with_errors').remove('.error-explanation');
      $(this).closest('.field_with_errors').siblings('.error-explanation').remove();
      $(this).closest('.field_with_errors').removeClass('field_with_errors');
      console.log("got here!");
    });

    // Enable Chosen Plugin for ingredients and tags
    $('#ingredient_selector').chosen({
      no_results_text: 'No ingredients matched',
      width: "100%"
    });
    $('#tag_selector').chosen({
      no_results_text: 'No tags matched',
      width: "100%",
      max_selected_options: 6
    });

</script>